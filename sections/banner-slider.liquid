<style>
  .swiper-{{ section.id }} {
    position: relative;
    width: 100%;
    height: 100vH;
    overflow: hidden;
    margin-bottom: 30px;
  }

  .slide-{{ section.id }} {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    opacity: 0;
    transition: opacity .2s linear;
  }

  .active-{{ section.id }} {
    opacity: 1;
  }

  .slide-{{ section.id }} img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    image-rendering: -webkit-optimize-contrast;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
  }

  /* Sağ ve sol ortadaki butonlar */
  .indicators-{{ section.id }} button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    font-size: 30px;
    background-color: transparent;
    color: black;
    border: none;
    cursor: pointer;
  }

  #prev-{{ section.id }} {
    left: 20px;
  }

  #next-{{ section.id }} {
    right: 20px;
  }

  /* Mobil cihazlar için özel stiller */
  @media (max-width: 768px) {
    .swiper-{{ section.id }} {
      height: 100vh;
    }

    .slide-{{ section.id }} img {
      width: 100vw;
      height: 100vh;
      object-fit: cover;
    }

    .indicators-{{ section.id }} button {
      top: 50%;
      transform: translateY(-50%);
    }
  }

  /* Pagination dots */
  .pagination-dots-{{ section.id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 8px;
  }

  .pagination-dots-{{ section.id }} button {
    width: 12px;
    height: 12px;
    background-color: grey;
    border-radius: 50%;
    border: none;
    cursor: pointer;
  }

  .pagination-dots-{{ section.id }} button.active {
    background-color: black;
  }
</style>

<div class="swiper-{{ section.id }}">
  {% for block in section.blocks %}
    <div class="slide-{{ section.id }} {% if forloop.first %}active-{{ section.id }}{% endif %}">
      <img src="{{ block.settings.image | img_url: 'master'}}" alt="{{ block.settings.text }}">
    </div>
  {% endfor %}
  <div class="pagination-dots-{{ section.id }}"></div> 
  <div class="indicators-{{ section.id }}">
    <button id="prev-{{ section.id }}">&#10094;</button>
    <button id="next-{{ section.id }}">&#10095;</button>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Slaytlar için benzersiz section ID'si ekliyoruz
    const sectionId = "{{ section.id }}";
    const slides = document.querySelectorAll(`.slide-${sectionId}`);
    const paginationDotsContainer = document.querySelector(`.pagination-dots-${sectionId}`);
    let currentSlideIndex = 0;

    // İlk slaytı aktif olarak ayarla
    if (slides.length > 0) {
      slides[currentSlideIndex].classList.add(`active-${sectionId}`);
    }

    slides.forEach((slide, index) => {
      const dot = document.createElement('button');
      if (index === currentSlideIndex) {
        dot.classList.add('active');
      }
      dot.addEventListener('click', () => {
        updateSlide(index);
      });
      paginationDotsContainer.appendChild(dot);
    });

    const paginationDots = document.querySelectorAll(`.pagination-dots-${sectionId} button`);

    const updateSlide = (newIndex) => {
      slides[currentSlideIndex].classList.remove(`active-${sectionId}`);
      paginationDots[currentSlideIndex].classList.remove('active');

      currentSlideIndex = newIndex;

      slides[currentSlideIndex].classList.add(`active-${sectionId}`);
      paginationDots[currentSlideIndex].classList.add('active');
    };

    // Sonraki slayta geçiş fonksiyonu
    const nextSlide = () => {
      const newIndex = (currentSlideIndex + 1) % slides.length;
      updateSlide(newIndex);
    };

    // Önceki slayta geçiş fonksiyonu
    const prevSlide = () => {
      const newIndex = (currentSlideIndex - 1 + slides.length) % slides.length;
      updateSlide(newIndex);
    };

    // Butonlara tıklama olaylarını ekle
    const nextButton = document.getElementById(`next-${sectionId}`);
    const prevButton = document.getElementById(`prev-${sectionId}`);

    if (nextButton && prevButton) {
      nextButton.addEventListener('click', nextSlide);
      prevButton.addEventListener('click', prevSlide);
    }
  });
</script>

{% schema %}
{
  "name": "Sliders",
  "class": "slideshow",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Slideshow"
    }
  ],
  "blocks": [
     {
       "name": "Slide",
       "type": "slide",
       "settings": [
         {
           "type": "image_picker",
           "id": "image",
           "label": "Image"
         }
       ]
     }
   ],
  "presets": [
    {
      "name": "Sliders"
    }
  ]
}
{% endschema %}
